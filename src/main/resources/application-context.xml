<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<context:property-placeholder location="classpath:redis_cluster.properties"/>
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.cluster.jedisPoolConfig.maxIdle}" />
		<property name="maxTotal" value="${redis.cluster.jedisPoolConfig.maxTotal}" />
		<property name="maxWaitMillis" value="${redis.cluster.jedisPoolConfig.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.cluster.jedisPoolConfig.testOnBorrow}" />
	</bean>
	
	<!-- 配置Cluster -->
	<bean id="redisClusterConfiguration" class="org.springframework.data.redis.connection.RedisClusterConfiguration">
		<property name="maxRedirects" value="${redis.cluster.maxRedirects}" />
		<!-- 节点配置 -->
		<property name="clusterNodes">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.host1}" />
					<constructor-arg name="port" value="${redis.cluster.port1}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.host2}" />
					<constructor-arg name="port" value="${redis.cluster.port2}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.host3}" />
					<constructor-arg name="port" value="${redis.cluster.port3}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.host4}" />
					<constructor-arg name="port" value="${redis.cluster.port4}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.host5}" />
					<constructor-arg name="port" value="${redis.cluster.port5}" />
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisClusterNode">
					<constructor-arg name="host" value="${redis.cluster.host6}" />
					<constructor-arg name="port" value="${redis.cluster.port6}" />
				</bean>
			</set>
		</property>
		
	</bean>
	
	<!-- 配置CLuster -->
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg ref="redisClusterConfiguration" />
		<constructor-arg ref="poolConfig" />
		<property name="password" value="${redis.cluster.jedisConnectionFactory.password}" />
	</bean>
	
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	
	<bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
		<!-- 序列化方法 -->
		<property name="keySerializer" ref="stringRedisSerializer" />
		<property name="hashKeySerializer" ref="stringRedisSerializer" />
		<property name="valueSerializer" ref="jdkSerializer" />
		<property name="hashValueSerializer" ref="jdkSerializer" />
	</bean>

	<bean id="userDAO" class="redis.impl.UserDAOImpl">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
	
	<!-- 配置cluster -->
	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>

</beans>